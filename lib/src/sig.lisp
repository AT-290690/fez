(let math:map (lambda Numbers (lambda Number (do Number)) (do Numbers)))
(let math:fold (lambda Numbers (lambda Number Number (do Number)) Number (do Number)))
(let math:enumerated-fold (lambda Numbers (lambda Number Number Number (do Number)) (do Number)))
(let math:maximum-index (lambda Numbers (do Number)))
(let math:minimum-index (lambda Numbers (do Number)))
(let math:var-def (lambda Number (do Numbers)))
(let math:var-get (lambda Numbers (do Number)))
(let math:var-set! (lambda Numbers Number (do Numbers)))
(let math:var-del! (lambda Numbers (do Numbers)))
(let math:var-set-and-get! (lambda Numbers Number (do Number)))
(let math:var-increment! (lambda Numbers (do Numbers)))
(let math:var-decrement! (lambda Numbers (do Numbers)))
(let math:var-increment-and-get! (lambda Numbers (do Number)))
(let math:var-decrement-and-get! (lambda Numbers (do Number)))

(let array:reduce (lambda Unknowns (lambda Number Unknown (do Number)) Number (do Number)))
(let array:enumerated-reduce (lambda Unknowns (lambda Number Unknown Number (do Number)) Number (do Number)))
(let bools:fold (lambda Booleans (lambda Boolean Boolean (do Boolean)) Boolean (do Boolean)))
